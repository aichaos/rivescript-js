// Generated by CoffeeScript 2.0.0
let TestCase;

TestCase = require("./test-base");

//###############################################################################
// BEGIN Block Tests
//###############################################################################
export function test_no_begin_block(test) {
	let bot;
	bot = new TestCase(test, `
		+ hello bot
		- Hello human.
	`);
	bot.reply("Hello bot", "Hello human.");
	return test.done();
}

export function test_simple_begin_block(test) {
	let bot;
	bot = new TestCase(test, `
		> begin
			+ request
			- {ok}
		< begin

		+ hello bot
		- Hello human.
	`);
	bot.reply("Hello bot.", "Hello human.");
	return test.done();
}

export function test_blocked_begin_block(test) {
	let bot;
	bot = new TestCase(test, `
		> begin
			+ request
			- Nope.
		< begin

		+ hello bot
		- Hello human.
	`);
	bot.reply("Hello bot.", "Nope.");
	return test.done();
}

export async function test_conditional_begin_block(test) {
	let bot;
	bot = new TestCase(test, `
		> begin
			+ request
			* <get met> == undefined => <set met=true>{ok}
			* <get name> != undefined => <get name>: {ok}
			- {ok}
		< begin

		+ hello bot
		- Hello human.

		+ my name is *
		- <set name=<formal>>Hello, <get name>.
	`);
	await bot.reply("Hello bot.", "Hello human.");
	bot.uservar("met", "true");
	bot.uservar("name", "undefined");
	await bot.reply("My name is bob", "Hello, Bob.");
	bot.uservar("name", "Bob");
	await bot.reply("Hello Bot", "Bob: Hello human.");
	return test.done();
}
